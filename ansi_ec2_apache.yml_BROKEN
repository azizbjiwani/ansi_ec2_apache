---
- hosts: local
  connection: local
  gather_facts: False
  vars:
    instance_type: t2.micro
    security_group: webservers_sg  # Change the security group name here
    image: ami-026c8acd92718196b  # Ubuntu Server 18.04 LTS (HVM), SSD Volume Type - ami-026c8acd92718196b (64-bit x86)
    keypair: personal-AWS-key  # This is the only key that has been created for AWS
    region: us-east-1d         # Change the Region
    count: 1
  vars_files:
    - aws_keys.yml

  tasks:
    - name: Ensure boto and boto3 modules are installed
      pip:
        name: "{{ item }}"
      with_items:
        - boto3
        - botocore
      delegate_to: "{{ ec2_instance_ip }}"

    - name: Create a security group
      ec2_group:
        name: "{{ security_group }}"
        description: The webservers security group
        region: "{{ region }}"
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 443
            to_port: 443
            cidr_ip: 0.0.0.0/0
        rules_egress:
          - proto: all
            cidr_ip: 0.0.0.0/0

    - name: Launch the new EC2 Instance
      ec2:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        group: "{{ security_group }}"
        instance_type: "{{ instance_type }}"
        image: "{{ image }}"
        wait: true 
        region: "{{ region }}"
        keypair: "{{ keypair }}"
        count: "{{count}}"
      register: ec2

    - name: Add the newly created host so that we can further contact it
      add_host:
        name: "{{ item.public_ip }}"
        groups: webservers
      with_items: "{{ ec2.instances }}" 

    - name: Add tag to Instance(s)
      ec2_tag:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        resource: "{{ item.id }}" 
        region: "{{ region }}" 
        state: "present"
      with_items: "{{ ec2.instances }}"
      args:
        tags:
          Type: webserver
          Owner: Aziz Jiwani 
          Purpose: Testing EC2 Instance From Ansible 

    - name: Wait for SSH to come up
      wait_for:
        host: "{{ item.public_ip }}"
        port: 22 
        state: started 
      with_items: "{{ ec2.instances }}"


- hosts: webservers
  remote_user: ubuntu
  become: yes
  gather_facts: no
  pre_tasks:
   - name: 'install python'
     raw: 'sudo apt-get -y install python'
  tasks:
   - name: Install Apache
     apt:
       name: apache2
       state: present
   - service: 
       name: apache2
       state: started
       enabled: yes
 
